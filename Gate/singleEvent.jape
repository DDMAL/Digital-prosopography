Phase: First
Input: Token Verb Birth Death Location Split Noun Date
Options: control=appelt


Macro: EVENT
:Event
{
    AnnotationSet event = (AnnotationSet) bindings.get("Event");
    Annotation verb = bindings.get("verb").iterator().next();  
    
    FeatureMap features = Factory.newFeatureMap();

    try
    {
    	Annotation loc = bindings.get("loc").iterator().next();
    
        String loc_string = doc.getContent().getContent(loc.getStartNode().getOffset(), loc.getEndNode().getOffset()).toString();
        
        features.put("location", loc_string);

    } catch (NullPointerException |  InvalidOffsetException e){}

    try 
    {
    	Annotation noun = bindings.get("noun").iterator().next();  

    	String noun_string = doc.getContent().getContent(noun.getStartNode().getOffset(), noun.getEndNode().getOffset()).toString();
        		
        features.put("object", noun_string);

    } catch (NullPointerException |  InvalidOffsetException e){}

    try
    {
    	Annotation date = bindings.get("date").iterator().next();  
        String date_string = doc.getContent().getContent(date.getStartNode().getOffset(), date.getEndNode().getOffset()).toString();
        
     	features.put("date", date_string);

    } catch (NullPointerException |  InvalidOffsetException e){}

    try
    {
        String verb_string = doc.getContent().getContent(verb.getStartNode().getOffset(), verb.getEndNode().getOffset()).toString();
    	features.put("verb", verb_string);  
    } catch (InvalidOffsetException e){}

    outputAS.add(event.firstNode(), event.lastNode(), "Event", features);
}

Rule: Event
(
    ({Verb}):verb
    ({Noun, !Split} | {Token.category=="DT"} | {Token.category=="IN"})[0,8]:noun
    ({Location})[0,1]:loc
    (
        ({Token.category=="IN"})?
        ({Date})
    )[0,1]:date
):Event
--> EVENT

Rule: ELoc
(
    ({Location}):loc
    ({Noun, !Split} | {Token.category=="DT"} | {Token.category=="IN"})[0,5]:noun
    ({Verb}):verb
    (
        ({Token.category=="IN"})?
        ({Date})
    )[0,1]:date
):Event
--> EVENT

Rule: EDate
(
    (
        ({Token.category=="IN"})?
        ({Date})
    ):date
    ({Verb}):verb
    ({Noun, !Split} | {Token.category=="DT"} | {Token.category=="IN"})[0,5]:noun
    ({Location})[0,1]:loc
):Event
--> EVENT
